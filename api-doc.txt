### Authentication ###
POST /auth/register     register a new user
REQUEST BODY
{
    name*               String      user name
    email*              String      email
    password*           String      password must contain only alphabet
    confirmPassword*    String      confirm password must match a password
}
RESPONSE
201
    {
        accessToken     string      user token
        newUser         object      user object without password
    }
400 {   message         string      client error message }
500 {   message         string      server error message }

POST /auth/login     user login
REQUEST BODY
{
    email*              String      email
    password*           String      password must contain only alphabet
}
RESPONSE
200
    {
        accessToken     string      user token
        user            object      user object without password
    }
400
    {
        message         string      client error message
    }
500
    {
        message         string      server error message
    }

GET /auth/me            fetch me
REQUEST BODY
RESPONSE
200
    {
        accessToken     string      user token
        user            object      user object without password
    }
400 {   message         string      client error message }
500 {   message         string      server error message }


GET     /users/:targetUserId/profile
HEADER
    AUTHORIZATION       Bearer [JWT]
RESPONSE
    200 { user, recipes, favs }
    400 { message: 'unexpected field' }
    401 { message: 'unauthenticated' }
    500 { message: 'internal server error' }

PATCH   /users          update user profile
HEADER
    AUTHORIZATION       Bearer [JWT]
REQUEST BODY            multipart/form-data
    name
    bio
    image
RESPONSE
    200 { data: user }
    400 { message: 'unexpected field' }
    401 { message: 'unauthenticated' }
    500 { message: 'internal server error' }

POST   /recipes         create recipe
HEADER
    AUTHORIZATION       Bearer [JWT]
REQUEST BODY            multipart/form-data
    name   
    description?
    image
    prepTime
    cookTime
    serving
    ingredients [{ingredient, amount, unit}, {}]
    instructions [{instruction, image?}]
    tip?
RESPONSE
    200 { recipe }
    400 { message: 'unexpected field' }
    401 { message: 'unauthenticated' }
    500 { message: 'internal server error' }


